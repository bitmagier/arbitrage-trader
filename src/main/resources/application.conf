akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  http {
    host-connection-pool.max-connections = 128
    host-connection-pool.max-open-requests = 512
    client.websocket.periodic-keep-alive-max-idle = 1 minute
    actor {
      debug {
//        receive = on
        unhandled = on
        lifecycle = on
      }
    }
  }
}


trade-room {

  restart-when-an-exchange-data-stream-is-older-than = 90 seconds

  available-assets=[BAND, VET, SNX, ICX, ZEC, HT, MKR, XTZ, COMP, BAT, OKB, ATOM, USDC, BSV, ALGO, SXP, THETA, DASH, KNC, XRP, LSK, TUSD, ETH, ERD, LINK, MIOTA, PAX, ADA, LEND, LTC, REP, OMG, ZRX, XMR, HEDG, USDT, AMPL, QTUM, HBAR, BTC, XLM, BCD, BTT, XEM, DOGE, DCR, WAVES, ETC, TRX, EOS, NEO, ZIL, HYN, ONT, BNB, BCH, CRO, BTG]
  reference-ticker-exchanges = [binance] // (mandatory) extended-ticker from that exchange (if available; one + fallbacks) are used for general calculations like asset conversions to USDT
  order-books-enabled = false // order books are optional, but they can improve the decision context to (TODO) choose optimal limits for Traders, LiquidityManagers and OrderBundleSafetyGuard

  order-bundle-safety-guard {
    max-reasonable-win-per-order-bundle-usdt = 50.0
    max-order-limit-ticker-variance = 0.005 // how much an order limit is allowed to differ from the best bid or ask price
    max-ticker-age = 10 second // when the last ticker update (any tradepair) of an exchange is older that this, we don't let orders through
    min-total-gain-in-usdt = 0.42 // this is the minimum gain of the transactions of the order-bundle plus the [simulated] extra costs (or gains) of the necessay altcoin liquidity providing transactions
  }

  stats {
    report-interval = 5 minutes
    aggregated-liquidity-report-asset = USDT
  }

  exchange {
    active = [binance, bitfinex] // list of active exchanges
    data-manager-init-timeout = 5 minutes

    binance {
      secrets {
        api-key = "" // [please override in custom.conf]
        api-secret-key = "" // [please override in custom.conf]
      }

      trade-assets = ${trade-room.available-assets}
      fee = {maker=0.001, taker=0.001}
      order-books-enabled = ${trade-room.order-books-enabled}
    }
    bitfinex { // The rate limit for the wss://api-pub.bitfinex.com/ domain is set at 20 connections per minute.
      secrets {
        api-key = "" // [please override in custom.conf]
        api-secret-key = "" // [please override in custom.conf]
      }

      trade-assets = ${trade-room.available-assets}
      fee = {maker=0.001, taker=0.002} // TODO check
      order-books-enabled = ${trade-room.order-books-enabled}
    }
  }
}

liquidity-manager {
  reserve-assets = [BTC, USDT, ETH]
}

trader {
  foo-trader {
    max-open-order-bundles = 3 // maxiumum number of open bundle of orders (one bundle is typically a set of 2 orders for 2 different exchanges)
    schedule-delay = 1000 ms
    lifesign-interval = 10 minutes
    order-bundle {
      min-gain-in-usdt = 0.42
      trade-amount-in-usdt = 500.0
      order-limit-addition-rate = 0.00005
    }
  }
}

http-timeout = 10 seconds
internal-communication-timeout = 2 seconds
internal-communication-timeout-during-init = 15 seconds
graceful-stop-timeout = 15 seconds // timeout to graefully stop actors (e.g. unused data channels)


### last thing to do:
include "custom.conf"
