akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  http {
    client.websocket.periodic-keep-alive-max-idle = 1 minute
    actor {
      debug {
        receive = on
        unhandled = on
//        lifecycle = on
      }
    }
  }
}


trade-room {
  max-data-age = 3 seconds // max valid age of available decision context data
  cached-data-lifetime = 300 ms // traderoom delivers it's caches collected TradeDecisionContext, if data inside cache is not older than this
  reference-ticker-exchanges = [binance, bitfinex] // ticker from that exchange (+ fallbacks in order) are used for general calculations like asset conversions to USDT
  internal-communication-timeout = 500 ms

  exchange {
    active = [binance] // list of active exchanges
    http-timeout = 10 seconds

    binance {
      assets = [BTC,ETH,USDT,ERD,ADA,ALGO,BTG] //,ADA,ERD,ALGO,USDT,BTG,XTZ,LINK,EOS,TRX,VET,MIOTA,DASH,ZEC]
      fee = {maker=0.001, taker=0.001}
      http-timeout = ${trade-room.exchange.http-timeout}
    }
    bitfinex { // The rate limit for the wss://api-pub.bitfinex.com/ domain is set at 20 connections per minute.
      assets = [BTC,ETH,USDT,ERD,ADA,ALGO,BTG]
      fee = {maker=0.001, taker=0.002} // to check
      http-timeout = ${trade-room.exchange.http-timeout}
    }
  }

  trader {
    foo-trader {
      max-open-order-bundles = 1 // maxiumum number of open bundle of orders (one bundle is typically a set of 2 orders for 2 different exchanges)
      schedule-rate = 1 seconds
      order-bundle {
        min-gain-in-usdt = 0.5
        trade-amount-in-usdt = 500.0
        min-balance-before-trade-in-usdt = 550.0
        order-limit-addition-percentage = 0.01
      }
    }
  }
}

### last thing to do:
include "custom.conf"
