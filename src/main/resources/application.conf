akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG" // source filter - finer graned filter is set in logback.xml
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    default-dispatcher {
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-factor = 32.0
        parallelism-max = 256
      }
    }
  }

  http {
    host-connection-pool.max-connections = 16
    host-connection-pool.max-open-requests = 64
    client.websocket.periodic-keep-alive-max-idle = 30 seconds
    actor {
      debug {
        //        receive = on
        unhandled = on
        lifecycle = on
      }
    }
  }
}

global {
  http-timeout = 20 seconds
  internal-communication-timeout = 3 seconds
  internal-communication-timeout-during-init = 90 seconds
}

trade-room {
  trade-simulation = true // when set to "true", NO trade request will reach an exchange, but instead the trades will be SIMULATED ONLY

  asset-blocklist = [BTG, IOTA, MIOTA] // causes only headache
  reference-ticker-exchange = binance
  max-order-lifetime = 45 seconds // cancel our orders, when they are not FILLED within that time. This limit counts for order-bundle orders as well as liquidity-tx-orders
  restart-when-data-stream-is-older-than = 3 minutes  // give a change for successful reconnect first
  pioneer-order-value-usd = 20.0 // USD value, we transfer from the primary reserve asset to the secondary reserve asset (and back) in the initial pioneer orders on each exchange

  stats-report-interval = 30 minutes
  trader-trigger-interval = 1 second

  order-bundle-safety-guard {
    max-reasonable-win-per-order-bundle-usd = 25.0
    max-order-limit-ticker-variance = 0.02 // how much an order limit is allowed to be away from ticker value
    max-ticker-age = 20 second // when the last ticker update (any tradepair) of an exchange is older that this, we don't let orders through
    min-total-gain-in-usd = 0.10 // this is the minimum gain of the transactions of the order-bundle plus the [simulated] extra costs (or gains) of the necessay altcoin liquidity providing transactions
  }

  active-exchanges = [binance, bitfinex] //, coinbase]
}

liquidity-manager {
  liquidity-lock-max-lifetime = 60 seconds // when a liquidity lock is not cleared, this is the maximum time, it can stay active [should be greater than related to trade-room.max-order-lifetime]
  liquidity-demand-active-time = 60 seconds // when demanded liquidity is not actually requested by a subsequent order within that time, the coins are transferred back to a reserve asset
  max-acceptable-exchange-rate-loss-versus-reference-ticker = 0.001 // defines the maximum acceptable relative loss (local ticker versus reference ticker) for liquidity conversion transactions

  # When we convert to a reserve liquidity or re-balance our reserve liquidity, we try for each of them to reach at least that value (measured in USD)
  # When the arbitra-trader starts, we check (as a minimum requirement), if we have at least that amount of cumulated value available for trading on each single exchange
  minimum-keep-reserve-liquidity-per-asset-in-usd = 220.0
  orderbook-based-tx-limit-quantity-overbooking = 7.5 // we assume, we have to trade more quantity (real quantity multiplied by this factor), when we calculate the ideal order limit based on an orderbook, because in reality we are not alone on the exchange
  ticker-based-tx-limit-beyond-edge-limit = 0.0002 // [limit-reality-adjustment-rate] defines the rate we set our limit above the highest ask or below the lowest bid (use 0.0 for matching exactly the bid or ask price).
  tx-value-granularity-in-usd = 25.0 // that's the granularity (and also minimum amount) we transfer in reserve asset re-balance orders
}

exchange {
  trade-pairs-init-timeout = 60 seconds // trade pairs, where not all necessary data arrived in that time are kicked out of usable trade pair list
  trade-pairs-init-min-portion = 0.95 // portion of all (usable) trade pairs, which must be initialized before the timeout, otherwise we get a failure

  binance {
    delivers-order-book = false
    delivers-stats24h = true
    reserve-assets = [USDT, BNB, BTC, ETH] // this is a prioritized list of reserve assets used on this exchange. The first reserve asset in list is the primary reserve-asset, all others are secondary reserve assets
    assets-blocklist = ${trade-room.asset-blocklist}
    usd-equivalent-coin = USDT // primary local USD equivalent coin. USDT, USDC etc. for amount calculations
    do-not-touch-these-assets = [] // these assets will not take part of the arbitrage-trading & liquidity-balancing; e.g. for own staking assets
    ticker-is-realtime = true
    fee-rate = 0.001 // https://www.binance.com/en/fee/schedule
    asset-source-weight = 9 // 0-9 source weight for asset definition registration. higher weights overule lower weights
    secrets {
      api-key = "" // [please override in custom.conf]
      api-secret-key = "" // [please override in custom.conf]
    }
    trade-pairs-init-timeout = ${exchange.trade-pairs-init-timeout}
    trade-pairs-init-min-portion = ${exchange.trade-pairs-init-min-portion}
  }

  bitfinex { // The rate limit for the wss://api-pub.bitfinex.com/ domain is set at 20 connections per minute.
    delivers-order-book = true
    delivers-stats24h = false
    reserve-assets = [USDT, BTC, ETH]
    assets-blocklist = ${trade-room.asset-blocklist}
    usd-equivalent-coin = USDT
    do-not-touch-these-assets = []
    ticker-is-realtime = false
    fee-rate = 0.0015
    ref-code = "IUXlFHleA"  // bitfinx affiliate code
    asset-source-weight = 1
    secrets {
      api-key = "" // [please override in custom.conf]
      api-secret-key = "" // [please override in custom.conf]
    }
    trade-pairs-init-timeout = ${exchange.trade-pairs-init-timeout}
    trade-pairs-init-min-portion = ${exchange.trade-pairs-init-min-portion}
  }

  coinbase {
    delivers-order-book = true
    delivers-stats24h = false
    reserve-assets = [USDC, BTC, ETH]
    assets-blocklist = ${trade-room.asset-blocklist}
    usd-equivalent-coin = USDC
    do-not-touch-these-assets = []
    ticker-is-realtime = true
    fee-rate = 0.005
    asset-source-weight = 5
    secrets {
      api-key = ""
      api-secret-key = ""
      api-key-passphrase = ""
    }
    trade-pairs-init-timeout = ${exchange.trade-pairs-init-timeout}
    trade-pairs-init-min-portion = ${exchange.trade-pairs-init-min-portion}
  }
}

trader {
  foo-trader {
    max-open-order-bundles = 3 // maxiumum number of open bundle of orders (one bundle is typically a set of 2 orders for 2 different exchanges)
    lifesign-interval = 10 minutes
    order-bundle {
      min-gain-in-usd = 0.15
      trade-amount-in-usd = 200.0
      orderbook-based-tx-limit-quantity-overbooking = ${liquidity-manager.orderbook-based-tx-limit-quantity-overbooking}
      ticker-based-tx-limit-beyond-edge-limit = ${liquidity-manager.ticker-based-tx-limit-beyond-edge-limit}
    }
  }
}


### you may create a custom.conf and put private configuration (secrets & custom configuration) inside
include "custom.conf"
